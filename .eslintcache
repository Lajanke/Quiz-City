[{"C:\\Development\\spiking\\quiz-app2\\src\\Components\\Header.tsx":"1","C:\\Development\\spiking\\quiz-app2\\src\\index.js":"2","C:\\Development\\spiking\\quiz-app2\\src\\Components\\QuizSection.tsx":"3","C:\\Development\\spiking\\quiz-app2\\src\\App.tsx":"4","C:\\Development\\spiking\\quiz-app2\\src\\queries.ts":"5","C:\\Development\\spiking\\quiz-app2\\src\\Components\\InputCountry.tsx":"6","C:\\Development\\spiking\\quiz-app2\\src\\Components\\stateQuiz.tsx":"7","C:\\Development\\spiking\\quiz-app2\\src\\Components\\StateQuiz.tsx":"8","C:\\Development\\spiking\\quiz-app2\\src\\stateMachine\\machine.js":"9"},{"size":203,"mtime":1611941630085,"results":"10","hashOfConfig":"11"},{"size":219,"mtime":1608808020381,"results":"12","hashOfConfig":"11"},{"size":2865,"mtime":1611945738845,"results":"13","hashOfConfig":"11"},{"size":649,"mtime":1611077335287,"results":"14","hashOfConfig":"11"},{"size":312,"mtime":1611077526632,"results":"15","hashOfConfig":"11"},{"size":2356,"mtime":1612436365538,"results":"16","hashOfConfig":"11"},{"size":2633,"mtime":1611078104718,"results":"17","hashOfConfig":"11"},{"size":3462,"mtime":1613747040173,"results":"18","hashOfConfig":"11"},{"size":231,"mtime":1613747040174,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8msx40",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Development\\spiking\\quiz-app2\\src\\Components\\Header.tsx",[],"C:\\Development\\spiking\\quiz-app2\\src\\index.js",[],["40","41"],"C:\\Development\\spiking\\quiz-app2\\src\\Components\\QuizSection.tsx",[],"C:\\Development\\spiking\\quiz-app2\\src\\App.tsx",[],"C:\\Development\\spiking\\quiz-app2\\src\\queries.ts",[],"C:\\Development\\spiking\\quiz-app2\\src\\Components\\InputCountry.tsx",[],"C:\\Development\\spiking\\quiz-app2\\src\\Components\\stateQuiz.tsx",["42","43","44","45","46","47"],"import \"../App.css\";\r\nimport { ApolloClient, NormalizedCacheObject } from \"@apollo/client\";\r\nimport { useQuery } from \"@apollo/client\";\r\nimport { RouteComponentProps } from \"@reach/router\";\r\nimport { GET_STATES } from \"../queries\";\r\nimport { cache } from \"../cache\";\r\nimport { useState, ChangeEvent } from \"react\";\r\nimport { cities_cities } from \"../types/cities\";\r\n\r\ninterface StateQuizProps extends RouteComponentProps {}\r\n\r\nexport const localClient: ApolloClient<NormalizedCacheObject> = new ApolloClient({\r\n  cache,\r\n  uri:\r\n    \"http://localhost:4000/\",\r\n});\r\n\r\nconst StateQuiz: React.FC<StateQuizProps> = () => {\r\n  const { data, loading, error } = useQuery<any>(\r\n    GET_STATES,\r\n    {client: localClient}\r\n  );\r\n  const [validation, setValidation] = useState<string[]>([]);\r\n  const [inputBox, setInputBox] = useState<string>(\"\");\r\n\r\n  if (loading) return <p>LOADING</p>;\r\n  if (error) return <p>{error.message}</p>;\r\n  if (!data) return <p>Not found</p>;\r\n\r\n    console.log(data)\r\n/*\r\n  const validGuesses: string[] = topCities.map((city: cities_cities) =>\r\n    city.name.toLowerCase()\r\n  );\r\n\r\n  const handleGuess = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setInputBox(e.target.value);\r\n    if (\r\n      validGuesses.includes(e.target.value.toLowerCase().trim()) &&\r\n      !validation.includes(e.target.value.toLowerCase().trim())\r\n    ) {\r\n      setValidation([...validation, e.target.value.toLowerCase().trim()]);\r\n      setInputBox(\"\");\r\n    }\r\n  };\r\n*/\r\n  return (\r\n    <>\r\n    <p>hjkhk</p>\r\n    </>\r\n  /*{\r\n    <>\r\n      <h2>\r\n        The top {quantity} largest cities in {country}\r\n      </h2>\r\n      {!validGuesses.every((val: string) => validation.includes(val)) && (\r\n        <form onSubmit={(e) => e.preventDefault()}>\r\n          <label>\r\n            Guess a City:\r\n            <input\r\n              type=\"text\"\r\n              value={inputBox}\r\n              onChange={(e) => handleGuess(e)}\r\n            />\r\n          </label>\r\n        </form>\r\n      )}\r\n      {validGuesses.every((val: string) => validation.includes(val)) && (\r\n        <p className=\"winner\">ðŸ¥³ You're a genius</p>\r\n      )}\r\n      {data && (\r\n        <ul>\r\n          {topCities.map((city: cities_cities) => {\r\n            return (\r\n              <li key={`${city.name}${city.population}`}>\r\n                <p>Population: {city.population.toLocaleString()} </p>\r\n                {validation.includes(city.name.toLowerCase()) && (\r\n                  <p className=\"correct\">{city.name}</p>\r\n                )}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      )}\r\n    </>}*/\r\n  );\r\n};\r\n\r\nexport default StateQuiz;\r\n","C:\\Development\\spiking\\quiz-app2\\src\\Components\\StateQuiz.tsx",[],"C:\\Development\\spiking\\quiz-app2\\src\\stateMachine\\machine.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":7,"column":20,"nodeType":"54","messageId":"55","endLine":7,"endColumn":31},{"ruleId":"52","severity":1,"message":"56","line":8,"column":10,"nodeType":"54","messageId":"55","endLine":8,"endColumn":23},{"ruleId":"52","severity":1,"message":"57","line":23,"column":10,"nodeType":"54","messageId":"55","endLine":23,"endColumn":20},{"ruleId":"52","severity":1,"message":"58","line":23,"column":22,"nodeType":"54","messageId":"55","endLine":23,"endColumn":35},{"ruleId":"52","severity":1,"message":"59","line":24,"column":10,"nodeType":"54","messageId":"55","endLine":24,"endColumn":18},{"ruleId":"52","severity":1,"message":"60","line":24,"column":20,"nodeType":"54","messageId":"55","endLine":24,"endColumn":31},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"@typescript-eslint/no-unused-vars","'ChangeEvent' is defined but never used.","Identifier","unusedVar","'cities_cities' is defined but never used.","'validation' is assigned a value but never used.","'setValidation' is assigned a value but never used.","'inputBox' is assigned a value but never used.","'setInputBox' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]